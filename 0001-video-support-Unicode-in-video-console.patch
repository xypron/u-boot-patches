From 8cd1a3fdb29c7be10e8ca0b54ab07ae205e1154b Mon Sep 17 00:00:00 2001
From: Heinrich Schuchardt <xypron.glpk@gmx.de>
Date: Sat, 27 Feb 2021 09:50:07 +0100
Subject: [PATCH 1/1] video: support Unicode in video console

UEFI programs use Unicode for console output, e.g. GRUB uses characters
from the 0x2500 code block to draw a box around the menu.

The TrueType console supports UTF-32. The normal console supports code page
437. We have to convert the UTF-8 stream passed to putc() accordingly.

Signed-off-by: Heinrich Schuchardt <xypron.glpk@gmx.de>
---
 drivers/video/vidconsole-uclass.c | 27 ++++++++++++++++++++++++---
 1 file changed, 24 insertions(+), 3 deletions(-)

diff --git a/drivers/video/vidconsole-uclass.c b/drivers/video/vidconsole-uclass.c
index 64bdc98eb6..d5095f69e0 100644
--- a/drivers/video/vidconsole-uclass.c
+++ b/drivers/video/vidconsole-uclass.c
@@ -8,6 +8,7 @@
 #define LOG_CATEGORY UCLASS_VIDEO_CONSOLE
 
 #include <common.h>
+#include <charset.h>
 #include <command.h>
 #include <console.h>
 #include <log.h>
@@ -478,8 +479,14 @@ error:
 	priv->escape = 0;
 }
 
-/* Put that actual character on the screen (using the CP437 code page). */
-static int vidconsole_output_glyph(struct udevice *dev, char ch)
+/*
+ * vidconsole_output_glyph() - put the actual character on the screen
+ *
+ * @dev:	video device
+ * @ch:		character: Unicode for Truetype, codepage 437 otherwise
+ * Return:	0 for success
+ */
+static int vidconsole_output_glyph(struct udevice *dev, int ch)
 {
 	struct vidconsole_priv *priv = dev_get_uclass_priv(dev);
 	int ret;
@@ -504,11 +511,25 @@ static int vidconsole_output_glyph(struct udevice *dev, char ch)
 	return 0;
 }
 
-int vidconsole_put_char(struct udevice *dev, char ch)
+int vidconsole_put_char(struct udevice *dev, char c)
 {
 	struct vidconsole_priv *priv = dev_get_uclass_priv(dev);
+	int ch;
 	int ret;
 
+	if (IS_ENABLED(CONFIG_EFI_LOADER)) {
+		static char buffer[5];
+
+		if (IS_ENABLED(CONFIG_CONSOLE_TRUETYPE))
+			ch = utf8_to_utf32_stream(c, buffer);
+		else
+			ch = utf8_to_cp437_stream(c, buffer);
+		if (!ch)
+			return 0;
+	} else {
+		ch = c;
+	}
+
 	if (priv->escape) {
 		vidconsole_escape_char(dev, ch);
 		return 0;
-- 
2.30.1

