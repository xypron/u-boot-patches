From 0f95158210ea78018241b478b5063987d932e52c Mon Sep 17 00:00:00 2001
From: Heinrich Schuchardt <xypron.glpk@gmx.de>
Date: Sun, 10 Nov 2019 02:28:46 +0100
Subject: [PATCH 1/1] efi_loader: call allow_unaligned() in efi_set_bootdev()

The device path functions handle unaligned packed structures and make u16
assignments.

Calling allow_unaligned() in path_to_uefi() is too late. Move the call to
efi_set_bootdev().

Signed-off-by: Heinrich Schuchardt <xypron.glpk@gmx.de>
---
 cmd/bootefi.c                    | 3 +++
 lib/efi_loader/efi_device_path.c | 7 -------
 2 files changed, 3 insertions(+), 7 deletions(-)

diff --git a/cmd/bootefi.c b/cmd/bootefi.c
index f613cce7e2..1d0c02e0f9 100644
--- a/cmd/bootefi.c
+++ b/cmd/bootefi.c
@@ -628,6 +628,9 @@ void efi_set_bootdev(const char *dev, const char *devnr, const char *path)
 	struct efi_device_path *device, *image;
 	efi_status_t ret;
 
+	/* The device path functions deal with unaligned u16 assignements */
+	allow_unaligned();
+
 	/* efi_set_bootdev is typically called repeatedly, recover memory */
 	efi_free_pool(bootefi_device_path);
 	efi_free_pool(bootefi_image_path);
diff --git a/lib/efi_loader/efi_device_path.c b/lib/efi_loader/efi_device_path.c
index 70333eab8f..2401996d31 100644
--- a/lib/efi_loader/efi_device_path.c
+++ b/lib/efi_loader/efi_device_path.c
@@ -826,13 +826,6 @@ static void path_to_uefi(void *uefi, const char *src)
 {
 	u16 *pos = uefi;
 
-	/*
-	 * efi_set_bootdev() calls this routine indirectly before the UEFI
-	 * subsystem is initialized. So we cannot assume unaligned access to be
-	 * enabled.
-	 */
-	allow_unaligned();
-
 	while (*src) {
 		s32 code = utf8_get(&src);
 
-- 
2.24.0

