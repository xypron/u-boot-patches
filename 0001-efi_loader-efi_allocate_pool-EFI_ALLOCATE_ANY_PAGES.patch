From 18cbe2aa9b1e096e93eab336099be51ef159de8f Mon Sep 17 00:00:00 2001
From: Heinrich Schuchardt <xypron.glpk@gmx.de>
Date: Wed, 3 Oct 2018 19:57:53 +0200
Subject: [PATCH 1/1 for v2018.11-rc2] efi_loader: efi_allocate_pool(EFI_ALLOCATE_ANY_PAGES,
 ...)

The first parameter of efi_allocate_pool is a memory type. It cannot be
EFI_ALLOCATE_ANY_PAGES. Use EFI_BOOT_SERVICES_DATA instead.

Signed-off-by: Heinrich Schuchardt <xypron.glpk@gmx.de>
---
 lib/efi_loader/efi_boottime.c | 6 +++---
 1 file changed, 3 insertions(+), 3 deletions(-)

diff --git a/lib/efi_loader/efi_boottime.c b/lib/efi_loader/efi_boottime.c
index 97eb19cd14..fddfeb1a1a 100644
--- a/lib/efi_loader/efi_boottime.c
+++ b/lib/efi_loader/efi_boottime.c
@@ -2023,7 +2023,7 @@ static efi_status_t EFIAPI efi_open_protocol_information(
 
 	/* Copy entries */
 	buffer_size = count * sizeof(struct efi_open_protocol_info_entry);
-	r = efi_allocate_pool(EFI_ALLOCATE_ANY_PAGES, buffer_size,
+	r = efi_allocate_pool(EFI_BOOT_SERVICES_DATA, buffer_size,
 			      (void **)entry_buffer);
 	if (r != EFI_SUCCESS)
 		goto out;
@@ -2080,7 +2080,7 @@ static efi_status_t EFIAPI efi_protocols_per_handle(
 		size_t j = 0;
 
 		buffer_size = sizeof(efi_guid_t *) * *protocol_buffer_count;
-		r = efi_allocate_pool(EFI_ALLOCATE_ANY_PAGES, buffer_size,
+		r = efi_allocate_pool(EFI_BOOT_SERVICES_DATA, buffer_size,
 				      (void **)protocol_buffer);
 		if (r != EFI_SUCCESS)
 			return EFI_EXIT(r);
@@ -2133,7 +2133,7 @@ static efi_status_t EFIAPI efi_locate_handle_buffer(
 			      *buffer);
 	if (r != EFI_BUFFER_TOO_SMALL)
 		goto out;
-	r = efi_allocate_pool(EFI_ALLOCATE_ANY_PAGES, buffer_size,
+	r = efi_allocate_pool(EFI_BOOT_SERVICES_DATA, buffer_size,
 			      (void **)buffer);
 	if (r != EFI_SUCCESS)
 		goto out;
-- 
2.19.0

