From 3cc656e60e4884e1239721a0b41a066983e09cf6 Mon Sep 17 00:00:00 2001
From: Heinrich Schuchardt <xypron.glpk@gmx.de>
Date: Sat, 15 May 2021 14:40:33 +0200
Subject: [PATCH 1/1] fs: fat: allow retrieving a dent for a directory

Currently when resolving a directory the iterator is always descending into
the directory. For retrieving directory attributes it is necessary to stop
at the directory entry of the directory itself.

Signed-off-by: Heinrich Schuchardt <xypron.glpk@gmx.de>
---
 fs/fat/fat.c | 11 ++++++-----
 1 file changed, 6 insertions(+), 5 deletions(-)

diff --git a/fs/fat/fat.c b/fs/fat/fat.c
index c561d82b35..1548045893 100644
--- a/fs/fat/fat.c
+++ b/fs/fat/fat.c
@@ -1037,10 +1037,11 @@ static int fat_itr_isdir(fat_itr *itr)
 /*
  * Helpers:
  */
-
-#define TYPE_FILE 0x1
-#define TYPE_DIR  0x2
-#define TYPE_ANY  (TYPE_FILE | TYPE_DIR)
+#define TYPE_FILE	0x1
+#define TYPE_DIR	0x2
+#define TYPE_ANY       (TYPE_FILE | TYPE_DIR)
+/* Don't descend into directory when reading directory attributes */
+#define DONT_DESCEND	0x4
 
 /**
  * fat_itr_resolve() - traverse directory structure to resolve the
@@ -1114,7 +1115,7 @@ static int fat_itr_resolve(fat_itr *itr, const char *path, unsigned type)
 		if (!match)
 			continue;
 
-		if (fat_itr_isdir(itr)) {
+		if ((next[0] || !(type & DONT_DESCEND)) && fat_itr_isdir(itr)) {
 			/* recurse into directory: */
 			fat_itr_child(itr, itr);
 			return fat_itr_resolve(itr, next, type);
-- 
2.30.2

