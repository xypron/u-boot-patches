From 378f05ac9b56c67746fea7bcd4c08e010e93c15c Mon Sep 17 00:00:00 2001
From: Heinrich Schuchardt <xypron.glpk@gmx.de>
Date: Thu, 7 Nov 2019 08:05:17 +0100
Subject: [PATCH 1/1] efi_loader: support helloworld.efi in sandbox

Signed-off-by: Heinrich Schuchardt <xypron.glpk@gmx.de>
---
 Makefile                             | 18 ++++++++++++++++++
 arch/sandbox/config.mk               | 18 ++++++++++++++++++
 arch/sandbox/lib/crt0_sandbox_efi.S  | 12 ++++++++++++
 arch/sandbox/lib/reloc_sandbox_efi.c | 12 ++++++++++++
 cmd/Kconfig                          |  2 +-
 5 files changed, 61 insertions(+), 1 deletion(-)
 create mode 100644 arch/sandbox/lib/crt0_sandbox_efi.S
 create mode 100644 arch/sandbox/lib/reloc_sandbox_efi.c

diff --git a/Makefile b/Makefile
index 3000d30be2..86a5c1ca30 100644
--- a/Makefile
+++ b/Makefile
@@ -17,6 +17,24 @@ NAME =
 # o Look for make include files relative to root of kernel src
 MAKEFLAGS += -rR --include-dir=$(CURDIR)
 
+# Determine host architecture
+MK_ARCH="${shell uname -m}"
+unexport HOST_ARCH
+ifeq ("x86_64", $(MK_ARCH))
+  export HOST_ARCH="X86_64"
+else ifneq (,$(findstring $(MK_ARCH), "i386" "i486" "i586" "i686"))
+  export HOST_ARCH="X86"
+else ifneq (,$(findstring $(MK_ARCH), "aarch64" "armv8l"))
+  export HOST_ARCH="ARM64"
+else ifeq ("armv7l", $(MK_ARCH))
+  export HOST_ARCH="ARM"
+else ifeq ("riscv32", $(MK_ARCH))
+  export HOST_ARCH="RISCV32"
+else ifeq ("riscv64", $(MK_ARCH))
+  export HOST_ARCH="RISCV64"
+endif
+undefine MK_ARCH
+
 # Avoid funny character set dependencies
 unexport LC_ALL
 LC_COLLATE=C
diff --git a/arch/sandbox/config.mk b/arch/sandbox/config.mk
index 05fbbd7bcc..fb6f927202 100644
--- a/arch/sandbox/config.mk
+++ b/arch/sandbox/config.mk
@@ -27,3 +27,21 @@ cmd_u-boot-spl = (cd $(obj) && $(CC) -o $(SPL_BIN) -Wl,-T u-boot-spl.lds \
 	$(PLATFORM_LIBS) -Wl,-Map -Wl,u-boot-spl.map -Wl,--gc-sections)
 
 CONFIG_ARCH_DEVICE_TREE := sandbox
+
+ifeq ($(HOST_ARCH), "X86_64")
+EFI_LDS := ${SRCDIR}/../../../arch/x86/lib/elf_x86_64_efi.lds
+EFI_TARGET := --target=efi-app-x86_64
+else ifeq ($(HOST_ARCH), "X86")
+EFI_LDS := ${SRCDIR}/../../../arch/x86/lib/elf_ia32_efi.lds
+EFI_TARGET := --target=efi-app-ia32
+else ifeq ($(HOST_ARCH), "ARM64")
+EFI_LDS := ${SRCDIR}/../../../arch/x86/lib/elf_arch64_efi.lds
+else ifeq ($(HOST_ARCH), "ARM")
+EFI_LDS := ${SRCDIR}/../../../arch/x86/lib/elf_arm_efi.lds
+else ifeq ($(HOST_ARCH), "RISCV32")
+EFI_LDS := ${SRCDIR}/../../../arch/x86/lib/elf_risc32_efi.lds
+else ifeq ($(HOST_ARCH), "RISCV64")
+EFI_LDS := ${SRCDIR}/../../../arch/x86/lib/elf_risc64_efi.lds
+endif
+EFI_CRT0 := crt0_sandbox_efi.o
+EFI_RELOC := reloc_sandbox_efi.o
diff --git a/arch/sandbox/lib/crt0_sandbox_efi.S b/arch/sandbox/lib/crt0_sandbox_efi.S
new file mode 100644
index 0000000000..e69a630c30
--- /dev/null
+++ b/arch/sandbox/lib/crt0_sandbox_efi.S
@@ -0,0 +1,12 @@
+
+#ifdef CONFIG_X86_64
+#include ../../../arch/x86/lib/crt0_x86_64_efi.S
+#elif defined CONFIG_X86
+#include ../../../arch/x86/lib/crt0_ia32_efi.S
+#elif defined CONFIG_ARM64
+#include ../../../arch/arm/lib/crt0_aarch64_efi.S
+#elif defined CONFIG_ARM
+#include ../../../arch/arm/lib/crt0_arm_efi.S
+#elif defined CONFIG_RISCV
+#include ../../../arch/riscv/lib/crt0_riscv_efi.S
+#endif
diff --git a/arch/sandbox/lib/reloc_sandbox_efi.c b/arch/sandbox/lib/reloc_sandbox_efi.c
new file mode 100644
index 0000000000..97e72bd2ba
--- /dev/null
+++ b/arch/sandbox/lib/reloc_sandbox_efi.c
@@ -0,0 +1,12 @@
+
+#ifdef CONFIG_X86_64
+#include ../../../arch/x86/lib/reloc_x86_64_efi.c
+#elif defined CONFIG_X86
+#include ../../../arch/x86/lib/reloc_ia32_efi.c
+#elif defined CONFIG_ARM64
+#include ../../../arch/arm/lib/reloc_aarch64_efi.c
+#elif defined CONFIG_ARM
+#include ../../../arch/arm/lib/reloc_arm_efi.c
+#elif defined CONFIG_RISCV
+#include ../../../arch/riscv/lib/reloc_riscv_efi.c
+#endif
diff --git a/cmd/Kconfig b/cmd/Kconfig
index b08a709857..0d6836c451 100644
--- a/cmd/Kconfig
+++ b/cmd/Kconfig
@@ -320,7 +320,7 @@ config BOOTM_VXWORKS
 
 config CMD_BOOTEFI_HELLO_COMPILE
 	bool "Compile a standard EFI hello world binary for testing"
-	depends on CMD_BOOTEFI && !CPU_V7M && !SANDBOX
+	depends on CMD_BOOTEFI && !CPU_V7M
 	default y
 	help
 	  This compiles a standard EFI hello world application with U-Boot so
-- 
2.24.0.rc1

