From 3e5f3f58a27bdb7eabc330d5ee9d7b7493a32467 Mon Sep 17 00:00:00 2001
From: Heinrich Schuchardt <xypron.glpk@gmx.de>
Date: Tue, 2 Oct 2018 05:13:27 +0200
Subject: [PATCH 1/1] fs: fat: eliminate parameter size in set_cluster()

Parameter size of set_cluster() is superfluous as parameter mydata
already contains the relevant information.

This fixes a CoverityScan warning 'Suspicous sign extension'.

Signed-off-by: Heinrich Schuchardt <xypron.glpk@gmx.de>
---
 fs/fat/fat_write.c | 31 +++++++++++++++++--------------
 1 file changed, 17 insertions(+), 14 deletions(-)

diff --git a/fs/fat/fat_write.c b/fs/fat/fat_write.c
index fc211e74bc..4286a0a847 100644
--- a/fs/fat/fat_write.c
+++ b/fs/fat/fat_write.c
@@ -387,16 +387,22 @@ static __u32 determine_fatent(fsdata *mydata, __u32 entry)
 	return next_entry;
 }
 
-/*
+/**
+ * set_cluster() - write data to cluster
+ *
  * Write at most 'size' bytes from 'buffer' into the specified cluster.
- * Return 0 on success, -1 otherwise.
+ *
+ * @mydata:	data to be written
+ * @clustnum:	cluster to be written to
+ * @buffer:	data to be written
+ * Return:	0 on success, -1 otherwise.
  */
 static int
-set_cluster(fsdata *mydata, __u32 clustnum, __u8 *buffer,
-	     unsigned long size)
+set_cluster(fsdata *mydata, __u32 clustnum, __u8 *buffer)
 {
 	__u32 idx = 0;
 	__u32 startsect;
+	u32 size = mydata->clust_size * mydata->sect_size;
 	int ret;
 
 	if (clustnum > 0)
@@ -589,9 +595,9 @@ static int flush_dir_table(fat_itr *itr)
 {
 	fsdata *mydata = itr->fsdata;
 	int dir_newclust = 0;
-	unsigned int bytesperclust = mydata->clust_size * mydata->sect_size;
+	u32 bytesperclust = mydata->clust_size * mydata->sect_size;
 
-	if (set_cluster(mydata, itr->clust, itr->block, bytesperclust) != 0) {
+	if (set_cluster(mydata, itr->clust, itr->block) != 0) {
 		printf("error: writing directory entry\n");
 		return -1;
 	}
@@ -872,7 +878,7 @@ set_clusters:
 
 		/* set remaining bytes */
 		actsize = filesize;
-		if (set_cluster(mydata, curclust, buffer, (int)actsize) != 0) {
+		if (set_cluster(mydata, curclust, buffer) != 0) {
 			debug("error: writing cluster\n");
 			return -1;
 		}
@@ -889,7 +895,7 @@ set_clusters:
 
 		return 0;
 getit:
-		if (set_cluster(mydata, curclust, buffer, (int)actsize) != 0) {
+		if (set_cluster(mydata, curclust, buffer) != 0) {
 			debug("error: writing cluster\n");
 			return -1;
 		}
@@ -1164,8 +1170,7 @@ int file_fat_write_at(const char *filename, loff_t pos, void *buffer,
 	}
 
 	/* Write directory table to device */
-	ret = set_cluster(mydata, itr->clust, itr->block,
-			  mydata->clust_size * mydata->sect_size);
+	ret = set_cluster(mydata, itr->clust, itr->block)
 	if (ret) {
 		printf("Error: writing directory entry\n");
 		ret = -EIO;
@@ -1242,8 +1247,7 @@ static int delete_dentry(fat_itr *itr)
 	memset(dentptr, 0, sizeof(*dentptr));
 	dentptr->name[0] = 0xe5;
 
-	if (set_cluster(mydata, itr->clust, itr->block,
-			mydata->clust_size * mydata->sect_size) != 0) {
+	if (set_cluster(mydata, itr->clust, itr->block) != 0) {
 		printf("error: writing directory entry\n");
 		return -EIO;
 	}
@@ -1439,8 +1443,7 @@ int fat_mkdir(const char *new_dirname)
 	}
 
 	/* Write directory table to device */
-	ret = set_cluster(mydata, itr->clust, itr->block,
-			  mydata->clust_size * mydata->sect_size);
+	ret = set_cluster(mydata, itr->clust, itr->block);
 	if (ret)
 		printf("Error: writing directory entry\n");
 
-- 
2.19.0

