From 2693f4a8168aae4523fb0f306d008341e59f238e Mon Sep 17 00:00:00 2001
From: Heinrich Schuchardt <xypron.glpk@gmx.de>
Date: Thu, 19 Nov 2020 07:44:08 +0100
Subject: [PATCH 1/1] fs: fat: first dentry of long name in FAT iterator

A long name is split over multiple directory entries. When deleting a file
with a long name we need the first directory entry to be able to delete the
whole chain.

Add the necessary fields to the FAT iterator:

* cluster of first directory entry
* address of first directory entry
* remaining entries in cluster

Signed-off-by: Heinrich Schuchardt <xypron.glpk@gmx.de>
---
 fs/fat/fat.c | 11 +++++++++--
 1 file changed, 9 insertions(+), 2 deletions(-)

diff --git a/fs/fat/fat.c b/fs/fat/fat.c
index 28aa5aaa9f..3269d87d7e 100644
--- a/fs/fat/fat.c
+++ b/fs/fat/fat.c
@@ -678,6 +678,9 @@ typedef struct {
 
 	/* current iterator position values: */
 	dir_entry *dent;          /* current directory entry */
+	int	   dent_rem;      /* remaining entries after long name start */
+	unsigned   dent_clust;    /* cluster of long name start */
+	dir_entry *dent_start;    /* first directory entry for long name */
 	char       l_name[VFAT_MAXLEN_BYTES];    /* long (vfat) name */
 	char       s_name[14];    /* short 8.3 name */
 	char      *name;          /* l_name if there is one, else s_name */
@@ -923,9 +926,13 @@ static int fat_itr_next(fat_itr *itr)
 
 	while (1) {
 		dent = next_dent(itr);
-		if (!dent)
+		if (!dent) {
+			itr->dent_start = NULL;
 			return 0;
-
+		}
+		itr->dent_rem = itr->remaining;
+		itr->dent_start = itr->dent;
+		itr->dent_clust = itr->clust;
 		if (dent->name[0] == DELETED_FLAG ||
 		    dent->name[0] == aRING)
 			continue;
-- 
2.29.2

