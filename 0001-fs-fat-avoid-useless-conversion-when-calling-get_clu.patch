From ecda3451a55d5cd378aeb8227d99dde2b08306b2 Mon Sep 17 00:00:00 2001
From: Heinrich Schuchardt <xypron.glpk@gmx.de>
Date: Tue, 13 Feb 2018 19:11:56 +0100
Subject: [PATCH v3 1/1] fs: fat: avoid useless conversion when calling
 get_cluster

Parameter size of function get_cluster() is of type unsigned long. It makes
no sense to convert actsize to int before passing it to get_cluster as
size. Let't use t_off as type of parameter to avoid any type conversion.

Signed-off-by: Heinrich Schuchardt <xypron.glpk@gmx.de>
---
v3
	use div64_ul() for division
	replace if(a!=0) by if(a)
v2
	change type of parameter size
---
 fs/fat/fat.c | 11 ++++++-----
 1 file changed, 6 insertions(+), 5 deletions(-)

diff --git a/fs/fat/fat.c b/fs/fat/fat.c
index dd7888cd6d4..9470727faf1 100644
--- a/fs/fat/fat.c
+++ b/fs/fat/fat.c
@@ -21,6 +21,7 @@
 #include <memalign.h>
 #include <linux/compiler.h>
 #include <linux/ctype.h>
+#include <linux/math64.h>
 
 /*
  * Convert a string to lowercase.  Converts at most 'len' characters,
@@ -244,7 +245,7 @@ static __u32 get_fatent(fsdata *mydata, __u32 entry)
  * Return 0 on success, -1 otherwise.
  */
 static int
-get_cluster(fsdata *mydata, __u32 clustnum, __u8 *buffer, unsigned long size)
+get_cluster(fsdata *mydata, __u32 clustnum, __u8 *buffer, loff_t size)
 {
 	__u32 idx = 0;
 	__u32 startsect;
@@ -275,7 +276,7 @@ get_cluster(fsdata *mydata, __u32 clustnum, __u8 *buffer, unsigned long size)
 			size -= mydata->sect_size;
 		}
 	} else {
-		idx = size / mydata->sect_size;
+		idx = div64_ul(size, mydata->sect_size);
 		ret = disk_read(startsect, idx, buffer);
 		if (ret != idx) {
 			debug("Error reading data (got %d)\n", ret);
@@ -353,7 +354,7 @@ static int get_contents(fsdata *mydata, dir_entry *dentptr, loff_t pos,
 	if (pos) {
 		actsize = min(filesize, (loff_t)bytesperclust);
 		if (get_cluster(mydata, curclust, get_contents_vfatname_block,
-				(int)actsize) != 0) {
+				actsize) != 0) {
 			printf("Error reading cluster\n");
 			return -1;
 		}
@@ -393,14 +394,14 @@ static int get_contents(fsdata *mydata, dir_entry *dentptr, loff_t pos,
 
 		/* get remaining bytes */
 		actsize = filesize;
-		if (get_cluster(mydata, curclust, buffer, (int)actsize) != 0) {
+		if (get_cluster(mydata, curclust, buffer, actsize)) {
 			printf("Error reading cluster\n");
 			return -1;
 		}
 		*gotsize += actsize;
 		return 0;
 getit:
-		if (get_cluster(mydata, curclust, buffer, (int)actsize) != 0) {
+		if (get_cluster(mydata, curclust, buffer, actsize)) {
 			printf("Error reading cluster\n");
 			return -1;
 		}
-- 
2.15.1

