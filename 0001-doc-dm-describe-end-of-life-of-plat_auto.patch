From 26d652f636160b1199d5ef19b5b8c512954e5f78 Mon Sep 17 00:00:00 2001
From: Heinrich Schuchardt <xypron.glpk@gmx.de>
Date: Sun, 31 Jan 2021 11:04:12 +0100
Subject: [PATCH 1/1] doc: dm: describe end of life of plat_auto

Describe when plat_auto is freed.

Fix a typo.

Signed-off-by: Heinrich Schuchardt <xypron.glpk@gmx.de>
---
 doc/driver-model/design.rst | 6 +++---
 1 file changed, 3 insertions(+), 3 deletions(-)

diff --git a/doc/driver-model/design.rst b/doc/driver-model/design.rst
index ffed7d5f79..1f00f437a8 100644
--- a/doc/driver-model/design.rst
+++ b/doc/driver-model/design.rst
@@ -725,7 +725,7 @@ The steps are:
 
    2. If plat_auto is non-zero, then the platform data space
    is allocated. This is only useful for device tree operation, since
-   otherwise you would have to specific the platform data in the
+   otherwise you would have to specify the platform data in the
    U_BOOT_DRVINFO() declaration. The space is allocated for the device and
    zeroed. It will be accessible as dev->plat.
 
@@ -861,8 +861,8 @@ remove it. This performs the probe steps in reverse:
    be dynamically allocated, and thus needs to be deallocated during the
    remove() method, either:
 
-      - if the plat_auto is non-zero, the deallocation
-        happens automatically within the driver model core; or
+      - if the plat_auto is non-zero, the deallocation happens automatically
+        within the driver model core in the unbind stage; or
 
       - when plat_auto is 0, both the allocation (in probe()
         or preferably of_to_plat()) and the deallocation in remove()
-- 
2.29.2

