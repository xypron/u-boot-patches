From 79e17db343080ddc085b9c753c8ec786ffcf3fc2 Mon Sep 17 00:00:00 2001
From: Heinrich Schuchardt <xypron.glpk@gmx.de>
Date: Sat, 11 May 2019 23:11:48 +0200
Subject: [PATCH 1/1] efi_loader: ACPI device node to text

The device path to text protocol renders ACPI device nodes incorrectly.

Use capital hexadecimal numbers as shown in the UEFI spec examples.

Always output the optional UID. This matches what UEFI SCT expects and
saves us an `if`.

Signed-off-by: Heinrich Schuchardt <xypron.glpk@gmx.de>
---
 lib/efi_loader/efi_device_path_to_text.c | 6 +++---
 1 file changed, 3 insertions(+), 3 deletions(-)

diff --git a/lib/efi_loader/efi_device_path_to_text.c b/lib/efi_loader/efi_device_path_to_text.c
index e219f84b28..f3a9579076 100644
--- a/lib/efi_loader/efi_device_path_to_text.c
+++ b/lib/efi_loader/efi_device_path_to_text.c
@@ -78,9 +78,9 @@ static char *dp_acpi(char *s, struct efi_device_path *dp)
 	case DEVICE_PATH_SUB_TYPE_ACPI_DEVICE: {
 		struct efi_device_path_acpi_path *adp =
 			(struct efi_device_path_acpi_path *)dp;
-		s += sprintf(s, "Acpi(PNP%04x", EISA_PNP_NUM(adp->hid));
-		if (adp->uid)
-			s += sprintf(s, ",%d", adp->uid);
+
+		s += sprintf(s, "Acpi(PNP%04X", EISA_PNP_NUM(adp->hid));
+		s += sprintf(s, ",%d", adp->uid);
 		s += sprintf(s, ")");
 		break;
 	}
-- 
2.20.1

