From c6f72e0c2e1c9ad5cad6e1d73242e691dbb58c23 Mon Sep 17 00:00:00 2001
From: Heinrich Schuchardt <xypron.glpk@gmx.de>
Date: Sat, 15 Feb 2020 00:08:34 +0100
Subject: [PATCH 1/1] test: efi: UEFI unit tests

Prepare for testing UEFI functions with the ut command.

Signed-off-by: Heinrich Schuchardt <xypron.glpk@gmx.de>
---
 MAINTAINERS           |  2 ++
 include/test/suites.h |  1 +
 test/Kconfig          |  8 ++++++++
 test/Makefile         |  1 +
 test/cmd_ut.c         |  6 ++++++
 test/efi/Makefile     |  5 +++++
 test/efi/test-main.c  | 20 ++++++++++++++++++++
 7 files changed, 43 insertions(+)
 create mode 100644 test/efi/Makefile
 create mode 100644 test/efi/test-main.c

diff --git a/MAINTAINERS b/MAINTAINERS
index 9dce9f10f2..f483f32b70 100644
--- a/MAINTAINERS
+++ b/MAINTAINERS
@@ -562,9 +562,11 @@ F:	include/cp1250.h
 F:	include/cp437.h
 F:	include/efi*
 F:	include/pe.h
+F:	include/test/efi.h
 F:	include/asm-generic/pe.h
 F:	lib/charset.c
 F:	lib/efi*/
+F:	test/efi/
 F:	test/py/tests/test_efi*
 F:	test/unicode_ut.c
 F:	cmd/bootefi.c
diff --git a/include/test/suites.h b/include/test/suites.h
index 0748185eaf..fc87aa5f53 100644
--- a/include/test/suites.h
+++ b/include/test/suites.h
@@ -28,6 +28,7 @@ int cmd_ut_category(const char *name, const char *prefix,
 int do_ut_bloblist(cmd_tbl_t *cmdtp, int flag, int argc, char *const argv[]);
 int do_ut_compression(cmd_tbl_t *cmdtp, int flag, int argc, char *const argv[]);
 int do_ut_dm(cmd_tbl_t *cmdtp, int flag, int argc, char * const argv[]);
+int do_ut_efi(cmd_tbl_t *cmdtp, int flag, int argc, char * const argv[]);
 int do_ut_env(cmd_tbl_t *cmdtp, int flag, int argc, char * const argv[]);
 int do_ut_lib(cmd_tbl_t *cmdtp, int flag, int argc, char * const argv[]);
 int do_ut_optee(cmd_tbl_t *cmdtp, int flag, int argc, char * const argv[]);
diff --git a/test/Kconfig b/test/Kconfig
index cb51b46721..cd067de260 100644
--- a/test/Kconfig
+++ b/test/Kconfig
@@ -6,6 +6,14 @@ menuconfig UNIT_TEST
 	  This does not require sandbox to be included, but it is most
 	  often used there.
 
+config UT_EFI
+	bool "Unit tests for the UEFI sub-system"
+	depends on UNIT_TEST && EFI_LOADER
+	default y
+	help
+	  Enables the 'ut efi' command which tests functions of the UEFI
+	  sub-system.
+
 config UT_LIB
 	bool "Unit tests for library functions"
 	depends on UNIT_TEST
diff --git a/test/Makefile b/test/Makefile
index 2fe41f489c..02dd6e0b2a 100644
--- a/test/Makefile
+++ b/test/Makefile
@@ -10,5 +10,6 @@ obj-$(CONFIG_SANDBOX) += compression.o
 obj-$(CONFIG_SANDBOX) += print_ut.o
 obj-$(CONFIG_UT_TIME) += time_ut.o
 obj-$(CONFIG_UT_UNICODE) += unicode_ut.o
+obj-$(CONFIG_UT_EFI) += efi/
 obj-$(CONFIG_$(SPL_)LOG) += log/
 obj-$(CONFIG_UNIT_TEST) += lib/
diff --git a/test/cmd_ut.c b/test/cmd_ut.c
index a3a9d49f7e..bf410063a3 100644
--- a/test/cmd_ut.c
+++ b/test/cmd_ut.c
@@ -48,6 +48,9 @@ static cmd_tbl_t cmd_ut_sub[] = {
 #if defined(CONFIG_UT_DM)
 	U_BOOT_CMD_MKENT(dm, CONFIG_SYS_MAXARGS, 1, do_ut_dm, "", ""),
 #endif
+#if defined(CONFIG_UT_EFI)
+	U_BOOT_CMD_MKENT(efi, CONFIG_SYS_MAXARGS, 1, do_ut_efi, "", ""),
+#endif
 #if defined(CONFIG_UT_ENV)
 	U_BOOT_CMD_MKENT(env, CONFIG_SYS_MAXARGS, 1, do_ut_env, "", ""),
 #endif
@@ -119,6 +122,9 @@ static char ut_help_text[] =
 #ifdef CONFIG_UT_DM
 	"ut dm [test-name]\n"
 #endif
+#ifdef CONFIG_UT_EFI
+	"ut efi [test-name] - test UEFI sub-system\n"
+#endif
 #ifdef CONFIG_UT_ENV
 	"ut env [test-name]\n"
 #endif
diff --git a/test/efi/Makefile b/test/efi/Makefile
new file mode 100644
index 0000000000..e06c5dd8b5
--- /dev/null
+++ b/test/efi/Makefile
@@ -0,0 +1,5 @@
+# SPDX-License-Identifier: GPL-2.0+
+#
+# Copyright 2020, Heinrich Schuchardt <xypron.glpk@gmx.de>
+
+obj-y += test-main.o
diff --git a/test/efi/test-main.c b/test/efi/test-main.c
new file mode 100644
index 0000000000..c914314515
--- /dev/null
+++ b/test/efi/test-main.c
@@ -0,0 +1,20 @@
+// SPDX-License-Identifier: GPL-2.0+
+/*
+ * Copyright (c) 2020, Heinrich Schuchardt <xypron.glpk@gmx.de>
+ *
+ * UEFI function tests.
+ */
+
+#include <common.h>
+#include <console.h>
+#include <test/efi.h>
+#include <test/suites.h>
+
+int do_ut_efi(cmd_tbl_t *cmdtp, int flag, int argc, char * const argv[])
+{
+	struct unit_test *tests = ll_entry_start(struct unit_test, efi_test);
+	const int n_ents = ll_entry_count(struct unit_test, efi_test);
+
+	return cmd_ut_category("efi", "efi_test_",
+			       tests, n_ents, argc, argv);
+}
-- 
2.25.0

