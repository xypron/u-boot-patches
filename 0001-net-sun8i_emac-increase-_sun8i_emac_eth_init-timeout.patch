From 01ee679a00657fff7ab5262f5b40e273ad11b468 Mon Sep 17 00:00:00 2001
From: Heinrich Schuchardt <xypron.glpk@gmx.de>
Date: Wed, 29 May 2019 20:35:00 +0200
Subject: [PATCH 1/1] net: sun8i_emac: increase _sun8i_emac_eth_init() timeout

On the OrangePi PC consistently errors "_sun8i_emac_eth_init: Timeout"
occur. Our wait loop consists only of 100 cycles without delay. The Linux
function sun8i_dwmac_reset() allows 100 ms for initialization. But a 100 ms
timeout does not stop the errors to occur in U-Boot.

Allow up to 2000 ms before timeout in _sun8i_emac_eth_init().

Signed-off-by: Heinrich Schuchardt <xypron.glpk@gmx.de>
---
 drivers/net/sun8i_emac.c | 9 ++++++---
 1 file changed, 6 insertions(+), 3 deletions(-)

diff --git a/drivers/net/sun8i_emac.c b/drivers/net/sun8i_emac.c
index c0a440886e..10af4ea2a3 100644
--- a/drivers/net/sun8i_emac.c
+++ b/drivers/net/sun8i_emac.c
@@ -424,17 +424,20 @@ static void tx_descs_init(struct emac_eth_dev *priv)
 static int _sun8i_emac_eth_init(struct emac_eth_dev *priv, u8 *enetaddr)
 {
 	u32 reg, v;
-	int timeout = 100;
 
 	reg = readl((priv->mac_reg + EMAC_CTL1));
 
 	if (!(reg & 0x1)) {
+		unsigned long waituntil = timer_get_us() + 2000000; /* 2 s */
+		int timeout;
+
 		/* Soft reset MAC */
 		setbits_le32((priv->mac_reg + EMAC_CTL1), 0x1);
 		do {
 			reg = readl(priv->mac_reg + EMAC_CTL1);
-		} while ((reg & 0x01) != 0 &&  (--timeout));
-		if (!timeout) {
+			timeout = waituntil < timer_get_us();
+		} while ((reg & 0x01) && !timeout);
+		if (timeout) {
 			printf("%s: Timeout\n", __func__);
 			return -1;
 		}
-- 
2.20.1

