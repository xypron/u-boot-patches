From f65371b1caa8aa7c757891f52a1802fade49f546 Mon Sep 17 00:00:00 2001
From: Heinrich Schuchardt <xypron.glpk@gmx.de>
Date: Tue, 17 Apr 2018 19:16:49 +0200
Subject: [PATCH 1/1] arm: create templates for kgdb

Create template files for the kernel debugger implementation.

Signed-off-by: Heinrich Schuchardt <xypron.glpk@gmx.de>
---
 arch/arm/lib/Makefile |  5 +++++
 arch/arm/lib/kgdb.c   | 54 +++++++++++++++++++++++++++++++++++++++++++++++++++
 arch/arm/lib/kgdb64.c | 54 +++++++++++++++++++++++++++++++++++++++++++++++++++
 3 files changed, 113 insertions(+)
 create mode 100644 arch/arm/lib/kgdb.c
 create mode 100644 arch/arm/lib/kgdb64.c

diff --git a/arch/arm/lib/Makefile b/arch/arm/lib/Makefile
index 3d3085e917..9ff2fb25ea 100644
--- a/arch/arm/lib/Makefile
+++ b/arch/arm/lib/Makefile
@@ -32,6 +32,11 @@ endif
 
 obj-$(CONFIG_CPU_V7M) += cmd_boot.o
 obj-$(CONFIG_OF_LIBFDT) += bootm-fdt.o
+ifdef CONFIG_ARM64
+obj-$(CONFIG_CMD_KGDB) += kgdb64.o
+else
+obj-$(CONFIG_CMD_KGDB) += kgdb.o
+endif
 obj-$(CONFIG_CMD_BOOTI) += bootm.o image.o
 obj-$(CONFIG_CMD_BOOTM) += bootm.o
 obj-$(CONFIG_CMD_BOOTZ) += bootm.o zimage.o
diff --git a/arch/arm/lib/kgdb.c b/arch/arm/lib/kgdb.c
new file mode 100644
index 0000000000..71d9438ba6
--- /dev/null
+++ b/arch/arm/lib/kgdb.c
@@ -0,0 +1,54 @@
+/*
+ * Kernel debugger
+ *
+ * Copyright (c) 2018 Heinrich Schuchardt <xypron.glpk@gmx.de>
+ *
+ * SPDX-License-Identifier:     GPL-2.0+
+ */
+#include <kgdb.h>
+
+void kgdb_flush_cache_range(void *from, void *to)
+{
+}
+
+void kgdb_flush_cache_all(void)
+{
+}
+
+int kgdb_setjmp(long *buf)
+{
+	return 0;
+}
+
+void kgdb_longjmp(long *buf, int val)
+{
+}
+
+void kgdb_enter(struct pt_regs *reqs, kgdb_data *kdp)
+{
+}
+void kgdb_exit(struct pt_regs *regs, kgdb_data *kdp)
+{
+}
+
+int kgdb_getregs(struct pt_regs *regs, char *buf, int max)
+{
+	return 0;
+}
+
+void kgdb_putreg(struct pt_regs *regs, int regno, char *buf, int length)
+{
+}
+
+void kgdb_putregs(struct pt_regs *regs, char *buf, int length)
+{
+}
+
+int kgdb_trap(struct pt_regs *regs)
+{
+	return 0;
+}
+
+void kgdb_breakpoint(int argc, char * const argv[])
+{
+}
diff --git a/arch/arm/lib/kgdb64.c b/arch/arm/lib/kgdb64.c
new file mode 100644
index 0000000000..71d9438ba6
--- /dev/null
+++ b/arch/arm/lib/kgdb64.c
@@ -0,0 +1,54 @@
+/*
+ * Kernel debugger
+ *
+ * Copyright (c) 2018 Heinrich Schuchardt <xypron.glpk@gmx.de>
+ *
+ * SPDX-License-Identifier:     GPL-2.0+
+ */
+#include <kgdb.h>
+
+void kgdb_flush_cache_range(void *from, void *to)
+{
+}
+
+void kgdb_flush_cache_all(void)
+{
+}
+
+int kgdb_setjmp(long *buf)
+{
+	return 0;
+}
+
+void kgdb_longjmp(long *buf, int val)
+{
+}
+
+void kgdb_enter(struct pt_regs *reqs, kgdb_data *kdp)
+{
+}
+void kgdb_exit(struct pt_regs *regs, kgdb_data *kdp)
+{
+}
+
+int kgdb_getregs(struct pt_regs *regs, char *buf, int max)
+{
+	return 0;
+}
+
+void kgdb_putreg(struct pt_regs *regs, int regno, char *buf, int length)
+{
+}
+
+void kgdb_putregs(struct pt_regs *regs, char *buf, int length)
+{
+}
+
+int kgdb_trap(struct pt_regs *regs)
+{
+	return 0;
+}
+
+void kgdb_breakpoint(int argc, char * const argv[])
+{
+}
-- 
2.15.1

