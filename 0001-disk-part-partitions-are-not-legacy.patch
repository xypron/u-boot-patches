From e8e7f198397078ce5b5a4dab69011fc3fce39881 Mon Sep 17 00:00:00 2001
From: Heinrich Schuchardt <xypron.glpk@gmx.de>
Date: Thu, 25 Feb 2021 18:15:18 +0100
Subject: [PATCH 1/1] disk: part: partitions are not legacy

Currently partition support depends on CONFIG_HAVE_BLOCK_DEVICE.

CONFIG_HAVE_BLOCK_DEVICE is described as

    'Enable Legacy Block Device'

If CONFIG_BLK is enabled, we should be able to support partitions even if
CONFIG_HAVE_BLOCK_DEVICE=n.

Furthermore the combination

CONFIG_EFI_PARTITION=y && CONFIG_HAVE_BLOCK_DEVICE=n && CONFIG_PARTITIONS=y

leads to a build error

   'partition_basic_data_guid' defined but not used

Move the CONFIG_HAVE_BLOCK_DEVICE dependency from C code to Kconfig.
Allow enabling CONFIG_PARTITIONS if CONFIG_BLK=y.

Signed-off-by: Heinrich Schuchardt <xypron.glpk@gmx.de>
---
 Kconfig           |  1 -
 cmd/Kconfig       |  3 ++-
 disk/Kconfig      |  1 +
 disk/part.c       | 23 -----------------------
 disk/part_amiga.c |  4 ----
 disk/part_dos.c   |  4 ----
 disk/part_efi.c   |  2 --
 disk/part_iso.c   |  3 ---
 disk/part_mac.c   |  3 ---
 9 files changed, 3 insertions(+), 41 deletions(-)

diff --git a/Kconfig b/Kconfig
index 86f0a39bb0..e6694328c1 100644
--- a/Kconfig
+++ b/Kconfig
@@ -135,7 +135,6 @@ config DISTRO_DEFAULTS
 	select CMD_EXT4
 	select CMD_FAT
 	select CMD_FS_GENERIC
-	select CMD_PART if PARTITIONS
 	select CMD_PING if CMD_NET
 	select CMD_PXE if NET
 	select CMD_SYSBOOT
diff --git a/cmd/Kconfig b/cmd/Kconfig
index 928a2a0a2d..ca47f8fb54 100644
--- a/cmd/Kconfig
+++ b/cmd/Kconfig
@@ -1172,7 +1172,8 @@ config CMD_OSD
 
 config CMD_PART
 	bool "part"
-	select HAVE_BLOCK_DEVICE
+	depends on PARTITIONS
+	default y if DISTRO_DEFAULTS
 	select PARTITION_UUIDS
 	help
 	  Read and display information about the partition table on
diff --git a/disk/Kconfig b/disk/Kconfig
index cee16a80bc..018bbe262e 100644
--- a/disk/Kconfig
+++ b/disk/Kconfig
@@ -3,6 +3,7 @@ menu "Partition Types"
 
 config PARTITIONS
 	bool "Enable Partition Labels (disklabels) support"
+	depends on BLK || HAVE_BLOCK_DEVICE
 	default y
 	select SPL_SPRINTF if SPL
 	select TPL_SPRINTF if TPL
diff --git a/disk/part.c b/disk/part.c
index 85b1af55e2..8e076e578d 100644
--- a/disk/part.c
+++ b/disk/part.c
@@ -54,7 +54,6 @@ static struct part_driver *part_driver_lookup_type(struct blk_desc *dev_desc)
 	return NULL;
 }
 
-#ifdef CONFIG_HAVE_BLOCK_DEVICE
 static struct blk_desc *get_dev_hwpart(const char *ifname, int dev, int hwpart)
 {
 	struct blk_desc *dev_desc;
@@ -80,19 +79,6 @@ struct blk_desc *blk_get_dev(const char *ifname, int dev)
 {
 	return get_dev_hwpart(ifname, dev, 0);
 }
-#else
-struct blk_desc *get_dev_hwpart(const char *ifname, int dev, int hwpart)
-{
-	return NULL;
-}
-
-struct blk_desc *blk_get_dev(const char *ifname, int dev)
-{
-	return NULL;
-}
-#endif
-
-#ifdef CONFIG_HAVE_BLOCK_DEVICE
 
 /* ------------------------------------------------------------------------- */
 /*
@@ -228,9 +214,6 @@ void dev_print (struct blk_desc *dev_desc)
 		puts ("            Capacity: not available\n");
 	}
 }
-#endif
-
-#ifdef CONFIG_HAVE_BLOCK_DEVICE
 
 void part_init(struct blk_desc *dev_desc)
 {
@@ -322,12 +305,9 @@ void part_print(struct blk_desc *dev_desc)
 		drv->print(dev_desc);
 }
 
-#endif /* CONFIG_HAVE_BLOCK_DEVICE */
-
 int part_get_info(struct blk_desc *dev_desc, int part,
 		       struct disk_partition *info)
 {
-#ifdef CONFIG_HAVE_BLOCK_DEVICE
 	struct part_driver *drv;
 
 #if CONFIG_IS_ENABLED(PARTITION_UUIDS)
@@ -353,7 +333,6 @@ int part_get_info(struct blk_desc *dev_desc, int part,
 		PRINTF("## Valid %s partition found ##\n", drv->name);
 		return 0;
 	}
-#endif /* CONFIG_HAVE_BLOCK_DEVICE */
 
 	return -1;
 }
@@ -421,14 +400,12 @@ int blk_get_device_by_str(const char *ifname, const char *dev_hwpart_str,
 		goto cleanup;
 	}
 
-#ifdef CONFIG_HAVE_BLOCK_DEVICE
 	/*
 	 * Updates the partition table for the specified hw partition.
 	 * Always should be done, otherwise hw partition 0 will return stale
 	 * data after displaying a non-zero hw partition.
 	 */
 	part_init(*dev_desc);
-#endif
 
 cleanup:
 	free(dup_str);
diff --git a/disk/part_amiga.c b/disk/part_amiga.c
index 7eea60b564..cb0b69ffeb 100644
--- a/disk/part_amiga.c
+++ b/disk/part_amiga.c
@@ -11,8 +11,6 @@
 #include "part_amiga.h"
 #include <part.h>
 
-#ifdef CONFIG_HAVE_BLOCK_DEVICE
-
 #undef AMIGA_DEBUG
 
 #ifdef AMIGA_DEBUG
@@ -387,5 +385,3 @@ U_BOOT_PART_TYPE(amiga) = {
 	.print		= part_print_amiga,
 	.test		= part_test_amiga,
 };
-
-#endif
diff --git a/disk/part_dos.c b/disk/part_dos.c
index 60addc6e00..131ea1123e 100644
--- a/disk/part_dos.c
+++ b/disk/part_dos.c
@@ -23,8 +23,6 @@
 #include "part_dos.h"
 #include <part.h>
 
-#ifdef CONFIG_HAVE_BLOCK_DEVICE
-
 #define DOS_PART_DEFAULT_SECTOR 512
 
 /* should this be configurable? It looks like it's not very common at all
@@ -516,5 +514,3 @@ U_BOOT_PART_TYPE(dos) = {
 	.print		= part_print_ptr(part_print_dos),
 	.test		= part_test_dos,
 };
-
-#endif
diff --git a/disk/part_efi.c b/disk/part_efi.c
index e5636ea7e6..4ebae31d5a 100644
--- a/disk/part_efi.c
+++ b/disk/part_efi.c
@@ -34,7 +34,6 @@ DECLARE_GLOBAL_DATA_PTR;
  */
 static const efi_guid_t partition_basic_data_guid = PARTITION_BASIC_DATA_GUID;
 
-#ifdef CONFIG_HAVE_BLOCK_DEVICE
 /**
  * efi_crc32() - EFI version of crc32 function
  * @buf: buffer to calculate crc32 of
@@ -1117,4 +1116,3 @@ U_BOOT_PART_TYPE(a_efi) = {
 	.print		= part_print_ptr(part_print_efi),
 	.test		= part_test_efi,
 };
-#endif
diff --git a/disk/part_iso.c b/disk/part_iso.c
index 822f2c4d9f..fb0028506a 100644
--- a/disk/part_iso.c
+++ b/disk/part_iso.c
@@ -12,8 +12,6 @@
 #include <asm/unaligned.h>
 #include "part_iso.h"
 
-#ifdef CONFIG_HAVE_BLOCK_DEVICE
-
 /* #define	ISO_PART_DEBUG */
 
 #ifdef	ISO_PART_DEBUG
@@ -241,4 +239,3 @@ U_BOOT_PART_TYPE(iso) = {
 	.print		= part_print_iso,
 	.test		= part_test_iso,
 };
-#endif
diff --git a/disk/part_mac.c b/disk/part_mac.c
index e01ae74566..ae8263f755 100644
--- a/disk/part_mac.c
+++ b/disk/part_mac.c
@@ -20,8 +20,6 @@
 #include "part_mac.h"
 #include <part.h>
 
-#ifdef CONFIG_HAVE_BLOCK_DEVICE
-
 /* stdlib.h causes some compatibility problems; should fixe these! -- wd */
 #ifndef __ldiv_t_defined
 typedef struct {
@@ -247,4 +245,3 @@ U_BOOT_PART_TYPE(mac) = {
 	.print		= part_print_mac,
 	.test		= part_test_mac,
 };
-#endif
-- 
2.30.0

