From a04515136cc3e1e05c0a458b4900df09f1808737 Mon Sep 17 00:00:00 2001
From: Heinrich Schuchardt <xypron.glpk@gmx.de>
Date: Thu, 13 May 2021 15:20:15 +0200
Subject: [PATCH 1/1] fs: fat: simplify write functions

Use fat_open() to simplify file_fat_write_at(), fat_unlink(), fat_mkdir().

Signed-off-by: Heinrich Schuchardt <xypron.glpk@gmx.de>
---
 fs/fat/fat.c       |  3 +-
 fs/fat/fat_write.c | 87 ++++++++--------------------------------------
 include/fat.h      |  2 ++
 3 files changed, 18 insertions(+), 74 deletions(-)

diff --git a/fs/fat/fat.c b/fs/fat/fat.c
index 88ad7e392b..635a106421 100644
--- a/fs/fat/fat.c
+++ b/fs/fat/fat.c
@@ -1178,8 +1178,7 @@ int file_fat_detectfs(void)
  * @type:	TYPE_ANY, TYPE_FILE, or TYPE_DIR
  * Return:	0 on success or -errno
  */
-static int fat_open(const char *filename, unsigned type,
-		    fat_itr** itr, fsdata *fsdata)
+int fat_open(const char *filename, unsigned type, fat_itr** itr, fsdata *fsdata)
 {
 	int ret;
 
diff --git a/fs/fat/fat_write.c b/fs/fat/fat_write.c
index 8ff2f6def0..53373195f3 100644
--- a/fs/fat/fat_write.c
+++ b/fs/fat/fat_write.c
@@ -1333,24 +1333,14 @@ int file_fat_write_at(const char *filename, loff_t pos, void *buffer,
 		goto exit;
 	}
 
-	itr = malloc_cache_aligned(sizeof(fat_itr));
-	if (!itr) {
-		ret = -ENOMEM;
-		goto exit;
-	}
-
-	ret = fat_itr_root(itr, &datablock);
+	ret = fat_open(parent, TYPE_DIR, &itr, mydata);
+	if (ret == -ENOENT)
+		printf("%s: doesn't exist (%d)\n", parent, ret);
 	if (ret)
 		goto exit;
 
 	total_sector = datablock.total_sect;
 
-	ret = fat_itr_resolve(itr, parent, TYPE_DIR);
-	if (ret) {
-		printf("%s: doesn't exist (%d)\n", parent, ret);
-		goto exit;
-	}
-
 	retdent = find_directory_entry(itr, l_filename);
 
 	if (retdent) {
@@ -1560,60 +1550,25 @@ static int delete_dentry_long(fat_itr *itr)
 
 int fat_unlink(const char *filename)
 {
-	fsdata fsdata = { .fatbuf = NULL, };
+	fsdata fsdata;
 	fat_itr *itr = NULL;
-	int n_entries, ret;
-	char *filename_copy, *dirname, *basename;
-
-	filename_copy = strdup(filename);
-	if (!filename_copy) {
-		printf("Error: allocating memory\n");
-		ret = -ENOMEM;
-		goto exit;
-	}
-	split_filename(filename_copy, &dirname, &basename);
-
-	if (!strcmp(dirname, "/") && !strcmp(basename, "")) {
-		printf("Error: cannot remove root\n");
-		ret = -EINVAL;
-		goto exit;
-	}
-
-	itr = malloc_cache_aligned(sizeof(fat_itr));
-	if (!itr) {
-		printf("Error: allocating memory\n");
-		ret = -ENOMEM;
-		goto exit;
-	}
+	int ret;
 
-	ret = fat_itr_root(itr, &fsdata);
+	ret = fat_open(filename, TYPE_ANY, &itr, &fsdata);
+	if (ret == -ENOENT)
+		printf("%s: doesn't exist (%d)\n", filename, ret);
 	if (ret)
 		goto exit;
 
 	total_sector = fsdata.total_sect;
 
-	ret = fat_itr_resolve(itr, dirname, TYPE_DIR);
-	if (ret) {
-		printf("%s: doesn't exist (%d)\n", dirname, ret);
-		ret = -ENOENT;
-		goto exit;
-	}
-
-	if (!find_directory_entry(itr, basename)) {
-		printf("%s: doesn't exist\n", basename);
-		ret = -ENOENT;
-		goto exit;
-	}
-
 	if (fat_itr_isdir(itr)) {
-		n_entries = fat_dir_entries(itr);
-		if (n_entries < 0) {
-			ret = n_entries;
+		ret = fat_dir_entries(itr);
+		if (ret < 0) {
 			goto exit;
 		}
-		if (n_entries > 2) {
-			printf("Error: directory is not empty: %d\n",
-			       n_entries);
+		if (ret > 2) {
+			printf("Error: directory is not empty: %d\n", ret);
 			ret = -EINVAL;
 			goto exit;
 		}
@@ -1624,8 +1579,6 @@ int fat_unlink(const char *filename)
 exit:
 	free(fsdata.fatbuf);
 	free(itr);
-	free(filename_copy);
-
 	return ret;
 }
 
@@ -1658,24 +1611,14 @@ int fat_mkdir(const char *dirname)
 		goto exit;
 	}
 
-	itr = malloc_cache_aligned(sizeof(fat_itr));
-	if (!itr) {
-		ret = -ENOMEM;
-		goto exit;
-	}
-
-	ret = fat_itr_root(itr, &datablock);
+	ret = fat_open(parent, TYPE_DIR, &itr, mydata);
+	if (ret == -ENOENT)
+		printf("%s: doesn't exist (%d)\n", parent, ret);
 	if (ret)
 		goto exit;
 
 	total_sector = datablock.total_sect;
 
-	ret = fat_itr_resolve(itr, parent, TYPE_DIR);
-	if (ret) {
-		printf("%s: doesn't exist (%d)\n", parent, ret);
-		goto exit;
-	}
-
 	retdent = find_directory_entry(itr, l_dirname);
 
 	if (retdent) {
diff --git a/include/fat.h b/include/fat.h
index bd8e450b33..e208170215 100644
--- a/include/fat.h
+++ b/include/fat.h
@@ -210,6 +210,8 @@ int file_fat_write(const char *filename, void *buf, loff_t offset, loff_t len,
 		   loff_t *actwrite);
 int fat_read_file(const char *filename, void *buf, loff_t offset, loff_t len,
 		  loff_t *actread);
+int fat_open(const char *filename, unsigned type, fat_itr** itr,
+	     fsdata *fsdata);
 int fat_opendir(const char *filename, struct fs_dir_stream **dirsp);
 int fat_readdir(struct fs_dir_stream *dirs, struct fs_dirent **dentp);
 void fat_closedir(struct fs_dir_stream *dirs);
-- 
2.30.2

