From 08cd09414b3ad070ccb2e704ab18dd40dd05ac77 Mon Sep 17 00:00:00 2001
From: Heinrich Schuchardt <xypron.glpk@gmx.de>
Date: Sun, 5 May 2019 16:55:06 +0200
Subject: [PATCH 1/1] efi_loader: LoadImage() parameter checks

If the file path is NULL, return EFI_INVALID_PARAMETER.
If the file path is invalid, return EFI_NOT_FOUND.
If the size of the source buffer is 0, return EFI_LOAD_ERROR.
If the parent image handle does not refer to a loaded image return
EFI_INVALID_PARAMETER.

Signed-off-by: Heinrich Schuchardt <xypron.glpk@gmx.de>
---
 include/efi_loader.h           |  1 +
 lib/efi_loader/efi_boottime.c  | 17 ++++++++++++-----
 lib/efi_loader/efi_root_node.c |  1 +
 3 files changed, 14 insertions(+), 5 deletions(-)

diff --git a/include/efi_loader.h b/include/efi_loader.h
index ef18d872d7..8bbfd0e3ed 100644
--- a/include/efi_loader.h
+++ b/include/efi_loader.h
@@ -190,6 +190,7 @@ struct efi_handler {
  */
 enum efi_object_type {
 	EFI_OBJECT_TYPE_UNDEFINED = 0,
+	EFI_OBJECT_TYPE_U_BOOT_FIRMWARE,
 	EFI_OBJECT_TYPE_LOADED_IMAGE,
 	EFI_OBJECT_TYPE_STARTED_IMAGE,
 };
diff --git a/lib/efi_loader/efi_boottime.c b/lib/efi_loader/efi_boottime.c
index 78a4063949..eb0aafa78b 100644
--- a/lib/efi_loader/efi_boottime.c
+++ b/lib/efi_loader/efi_boottime.c
@@ -1676,6 +1676,9 @@ efi_status_t efi_load_image_from_path(struct efi_device_path *file_path,
 	u64 addr;
 	efi_uintn_t bs;
 
+	if (!file_path)
+		return EFI_INVALID_PARAMETER;
+
 	/* In case of failure nothing is returned */
 	*buffer = NULL;
 	*size = 0;
@@ -1683,7 +1686,7 @@ efi_status_t efi_load_image_from_path(struct efi_device_path *file_path,
 	/* Open file */
 	f = efi_file_from_path(file_path);
 	if (!f)
-		return EFI_DEVICE_ERROR;
+		return EFI_NOT_FOUND;
 
 	/* Get file size */
 	bs = 0;
@@ -1760,13 +1763,13 @@ efi_status_t EFIAPI efi_load_image(bool boot_policy,
 	EFI_ENTRY("%d, %p, %pD, %p, %zd, %p", boot_policy, parent_image,
 		  file_path, source_buffer, source_size, image_handle);
 
-	if (!image_handle || !parent_image) {
+	if (!image_handle || !efi_search_obj(parent_image)) {
 		ret = EFI_INVALID_PARAMETER;
 		goto error;
 	}
-
-	if (!source_buffer && !file_path) {
-		ret = EFI_NOT_FOUND;
+	/* The parent image handle must refer to a loaded image */
+	if (!parent_image->type) {
+		ret = EFI_INVALID_PARAMETER;
 		goto error;
 	}
 
@@ -1776,6 +1779,10 @@ efi_status_t EFIAPI efi_load_image(bool boot_policy,
 		if (ret != EFI_SUCCESS)
 			goto error;
 	} else {
+		if (!source_size) {
+			ret = EFI_LOAD_ERROR;
+			goto error;
+		}
 		dest_buffer = source_buffer;
 	}
 	/* split file_path which contains both the device and file parts */
diff --git a/lib/efi_loader/efi_root_node.c b/lib/efi_loader/efi_root_node.c
index 9daeefdebe..34ef27ac11 100644
--- a/lib/efi_loader/efi_root_node.c
+++ b/lib/efi_loader/efi_root_node.c
@@ -73,4 +73,5 @@ efi_status_t efi_root_node_register(void)
 		       (void *)&efi_hii_config_routing,
 #endif
 		       NULL));
+	efi_root->type = EFI_OBJECT_TYPE_U_BOOT_FIRMWARE;
 }
-- 
2.20.1

