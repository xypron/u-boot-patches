From 11e91291b191519b753186caf0cf00b39b875b22 Mon Sep 17 00:00:00 2001
From: Heinrich Schuchardt <xypron.glpk@gmx.de>
Date: Tue, 15 Jun 2021 08:45:26 +0200
Subject: [PATCH] dm: core: add parent_post_bind() method

Some drivers set up the private or platform data only after children have
been completed. The child devices may need access to this data to complete
its own initialization.

One example is setting up block devices for the UEFI sub-system.

Signed-off-by: Heinrich Schuchardt <xypron.glpk@gmx.de>
---
 drivers/core/device.c | 10 ++++++++++
 include/dm/device.h   |  2 ++
 2 files changed, 12 insertions(+)

diff --git a/drivers/core/device.c b/drivers/core/device.c
index cb960f8ec4..ec3d7994ca 100644
--- a/drivers/core/device.c
+++ b/drivers/core/device.c
@@ -40,6 +40,7 @@ static int device_bind_common(struct udevice *parent, const struct driver *drv,
 			      uint of_plat_size, struct udevice **devp)
 {
 	struct udevice *dev;
+	struct udevice *child;
 	struct uclass *uc;
 	int size, ret = 0;
 	bool auto_seq = true;
@@ -183,6 +184,15 @@ static int device_bind_common(struct udevice *parent, const struct driver *drv,
 
 	dev_or_flags(dev, DM_FLAG_BOUND);
 
+	for (device_find_first_child(dev, &child);
+	     child;
+	     device_find_next_child(&child)) {
+		if (child->driver && child->driver->parent_post_bind) {
+			ret = child->driver->parent_post_bind(dev);
+			if (ret)
+				goto fail_uclass_post_bind;
+		}
+	}
 	return 0;
 
 fail_uclass_post_bind:
diff --git a/include/dm/device.h b/include/dm/device.h
index 0a9718a5b8..d086775410 100644
--- a/include/dm/device.h
+++ b/include/dm/device.h
@@ -329,6 +329,7 @@ struct udevice_id {
  * @unbind: Called to unbind a device from its driver
  * @of_to_plat: Called before probe to decode device tree data
  * @child_post_bind: Called after a new child has been bound
+ * @parent_post_bind: Called after parent device has been bound.
  * @child_pre_probe: Called before a child device is probed. The device has
  * memory allocated but it has not yet been probed.
  * @child_post_remove: Called after a child device is removed. The device
@@ -364,6 +365,7 @@ struct driver {
 	int (*unbind)(struct udevice *dev);
 	int (*of_to_plat)(struct udevice *dev);
 	int (*child_post_bind)(struct udevice *dev);
+	int (*parent_post_bind)(struct udevice *dev);
 	int (*child_pre_probe)(struct udevice *dev);
 	int (*child_post_remove)(struct udevice *dev);
 	int priv_auto;
-- 
2.30.2

