From 5b70f94516c229a95b2584931900afa034e09be4 Mon Sep 17 00:00:00 2001
From: Heinrich Schuchardt <xypron.glpk@gmx.de>
Date: Sun, 21 Mar 2021 11:05:05 +0100
Subject: [PATCH 1/1] test: unit test for longjmp

Provide a unit test for the longjmp() library function

Signed-off-by: Heinrich Schuchardt <xypron.glpk@gmx.de>
---
 test/lib/Makefile  |  1 +
 test/lib/longjmp.c | 44 ++++++++++++++++++++++++++++++++++++++++++++
 2 files changed, 45 insertions(+)
 create mode 100644 test/lib/longjmp.c

diff --git a/test/lib/Makefile b/test/lib/Makefile
index 97c11e35a8..a30f615aa9 100644
--- a/test/lib/Makefile
+++ b/test/lib/Makefile
@@ -7,6 +7,7 @@ obj-$(CONFIG_EFI_LOADER) += efi_device_path.o
 obj-$(CONFIG_EFI_SECURE_BOOT) += efi_image_region.o
 obj-y += hexdump.o
 obj-y += lmb.o
+obj-y += longjmp.o
 obj-$(CONFIG_CONSOLE_RECORD) += test_print.o
 obj-$(CONFIG_SSCANF) += sscanf.o
 obj-y += string.o
diff --git a/test/lib/longjmp.c b/test/lib/longjmp.c
new file mode 100644
index 0000000000..7571540ffc
--- /dev/null
+++ b/test/lib/longjmp.c
@@ -0,0 +1,44 @@
+// SPDX-License-Identifier: GPL-2.0+
+/*
+ * Test setjmp(), longjmp()
+ *
+ * Copyright (c) 2021, Heinrich Schuchardt <xypron.glpk@gmx.de>
+ */
+
+#include <common.h>
+#include <test/lib.h>
+#include <test/test.h>
+#include <test/ut.h>
+#include <asm/setjmp.h>
+
+/**
+ * test_longjmp_ret() - get longjmp() return value
+ *
+ * @i:		value passed to longjmp()
+ * Return:	value returned by longjmp()
+ */
+int test_longjmp_ret(int i)
+{
+	jmp_buf env;
+	int ret;
+
+	ret = setjmp(env);
+	if (ret)
+		return ret;
+	longjmp(env, i);
+	/* We should not arrive here */
+	return 0x1000;
+}
+
+static int lib_test_longjmp(struct unit_test_state *uts)
+{
+	int i;
+
+	for (i = -3; i < 0; ++i)
+		ut_asserteq(i, test_longjmp_ret(i));
+	ut_asserteq(1, test_longjmp_ret(0));
+	for (i = 1; i < 4; ++i)
+		ut_asserteq(i, test_longjmp_ret(i));
+	return 0;
+}
+LIB_TEST(lib_test_longjmp, 0);
-- 
2.30.2

